plugins {
	id 'java'
	id 'eclipse'
	id 'net.saliman.cobertura' version '2.2.6'
	id "org.sonarqube" version "1.0"
	id "com.jfrog.bintray" version "1.4"
}

group = 'synapticloop'
archivesBaseName = 'templar'
description = """Templar templating engine"""
version = 'v1.1.1'

sourceCompatibility = 1.6
targetCompatibility = 1.6


cobertura {
	coverageFormats = [ 'html', 'xml']
}

test {
	include '**/*Test.class' 
	maxParallelForks = 1
	forkEvery = 50 
}

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	testRuntime 'junit:junit:4.11'
	testRuntime 'org.mockito:mockito-all:1.10.19'

	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.10.19'
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.6.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
    options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

test.finalizedBy(project.tasks.cobertura)

allprojects {
	repositories {
		jcenter()
	}
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'java'
}

publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			groupId 'synapticloop'
			artifactId 'templar'
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ] //When uploading Maven-based publication files

	publish = true

	pkg {
		repo = 'maven'
		name = "templar"
	}
}
task(dist).dependsOn( [ 'test', 'cobertura'] )