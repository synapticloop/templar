plugins {
	id 'java'
	id 'eclipse'
	id 'maven'
	id 'maven-publish'

	id "com.github.ben-manes.versions" version "0.25.0"

	id 'co.riiid.gradle' version '0.3.1'

	id 'synapticloop.documentr' version '3.0.0'
	id 'synapticloop.copyrightr' version '1.3.1'
	id "org.datlowe.maven-publish-auth" version "2.0.2"

	id "synapticloop.projectFilestatistics" version "1.1.0"

	id 'com.github.johnrengelman.shadow' version '5.1.0'
}


group = 'synapticloop'
archivesBaseName = 'templar'
description = """Templar templating engine"""
version = '1.4.5'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// tasks.withType(Javadoc).all { enabled = false }


test {
	include '**/*Test.class' 
	maxParallelForks = 1
	forkEvery = 50 
}

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()

	maven{
		url "https://maven.pkg.github.com/synapticloop"
	}
}

dependencies {
	implementation 'org.json:json:20190722'

	testRuntime 'junit:junit:4.11'
	testRuntime 'org.mockito:mockito-all:1.10.19'

	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.10.19'
}

// we always want to fail on version conflict
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'xerces:xmlParserAPIs:2.6.2',
					'xerces:xercesImpl:2.6.2',
					'xml-apis:xml-apis:2.0.2'
	}
}

copyrightr {
	dryRun = false
	excludes = [
		"src/test/java/**/*.java"
	]
}

github {
	owner = group
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '-all.jar'
	]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

publishing {
	publications {
		synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId group
			artifactId archivesBaseName

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}

	repositories {
		maven {
			url "https://maven.pkg.github.com/synapticloop/templar"

			credentials {
				username = System.getenv('GITHUB_PUBLISH_USER')
				password = System.getenv('GITHUB_PUBLISH_TOKEN')
			}
		}
	}
}

build.finalizedBy(project.tasks.shadowJar)

task(dist).dependsOn( [ 'test', 'cobertura'] )
